class Solution {
public:

void traverseLeft(Node* root, vector<int>&ans){
    if((root==NULL) || (root->left==NULL && root->right==NULL))
     return;
     
     ans.push_back(root->data);
     
     if(root->left)
     traverseLeft(root->left,ans);
     else 
     traverseLeft(root->right,ans);
}
            
            void leafNode(Node* root, vector<int>&ans){
                if(root==NULL)
                return;
                
                if(root->left==NULL && root->right==NULL)
                ans.push_back(root->data);
                return;
                leafNode(root->left,ans);
                leafNode(root->right,ans);
            }
            
            void traverseRight(Node* root, vector<int>&ans){
    if((root==NULL) || (root->left==NULL && root->right==NULL))
     return;
     
   
     
     if(root->left)
     traverseRight(root->left,ans);
     else 
     traverseRight(root->right,ans);
     
       ans.push_back(root->data);
}
    vector <int> boundary(Node *root)
    {
      vector<int>ans;
      
      if(root==NULL)
      return ans;
      
      ans.push_back(root->data);
      
      traverseLeft(root->left,ans);
    
      leafNode(root->left,ans);
      leafNode(root->right,ans);
      
      traverseRight(root->right,ans);
      
      return ans;
    }
};
