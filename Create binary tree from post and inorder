void createMapping(int in[], int post[], map<int,int>&nodeToIndex, int n){
for(int i=0; i<n; i++){
nodeToIndex[in[i]]= i;
}
 }
 
Node* solve(int in[], int post[], int &index, int inorderStart, int inorderEnd, int n, map<int,int>&nodeToIndex){
if(index<0 || indorderStart > inorederStart)
 return NULL;
}

int element= post[index--];
Node* root= new Node(element);
    
int position= nodeToIndex[element];

root->left= solve(in, post, position+1, inorderEnd, n, nodeToIndex);
root->right= solve(in, post, inorderStart, position-1, n, nodeToIndex);

return root;
}

Node* buildTree(int in[], int post[], int n){
 int postOrderIndex= n-1;
 map<int,int>nodeToIndex;
 
 createMapping(in, nodeToIndex, n);
 Node* ans= solve(in, post, postOrderIndex, 0, n-1, n, nodeToIndex);
 return ans;
}
