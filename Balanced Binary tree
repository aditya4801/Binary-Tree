 pair<bool,int> check(TreeNode* root){
   if(root==NULL){
     pair<bool, int>p= make_pair(true,0);
     return p;
    }
    pair<int,int>left= check(root->left);
    pair<int,int>right= check(root->right);
    
    bool leftAns= left.first;
    bool rightAns= right.first;
    
    bool diff= abs(left.second-right.second) <=1;
    
    pair<bool,int>ans;
    
    ans.second= max(left.second, right.second) +1;
    
    if(left && right && diff){
     ans.first= true;
    }
    else {
     ans.first= false;
     }
     return ans;
 }
 
 bool isBalanced(TreeNode* root) {
  return check(root).first; 
 }
